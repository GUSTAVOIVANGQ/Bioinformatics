# -*- coding: utf-8 -*-
"""Copy of Gromacs example 19mar25.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YuNJ64fTaJm5poDt20Ctpwq8A34Zou7E

Tutorial: http://www.mdtutorials.com/gmx/lysozyme/
"""

!apt-get install gromacs
#aprox 34s

#from google.colab import drive
#drive.mount('/content/drive')

!apt-get install grace
#aprox 21s

#!wget https://files.rcsb.org/download/1AKI.pdb
!wget https://files.rcsb.org/download/1WKX.pdb

#!head -n 1363 2PTL.pdb | tail -n 937 > 2PTLm1t.pdb

#!grep -v HOH 1AKI.pdb > 1AKI_clean.pdb
!grep -v HOH 1WKX.pdb > clean.pdb

!ls /usr/share/gromacs/top/

#!gmx pdb2gmx -f 1AKI_clean.pdb -o 1AKI_processed.gro -ff charmm27 -water spc
!gmx pdb2gmx -f clean.pdb -o processed.gro -ff charmm27 -water spc

!cp clean.pdb clean.pdb.txt

!cp clean.pdb.txt clean.pdb

!cp processed.gro processed.gro.txt

# from google.colab import output
# output.enable_custom_widget_manager()

# import mdtraj
# import nglview

# #traj = mdtraj.load('1AKI_processed.gro')
# traj = mdtraj.load('processed.gro')
# view = nglview.show_mdtraj(traj)
# view.clear_representations()
# view.add_representation('ball+stick')
# view

# Commented out IPython magic to ensure Python compatibility.
# %%writefile group3.txt
# 3

#!gmx editconf -f 1AKI_processed.gro -o 1AKI_newbox.gro -c -d 1.0 -bt cubic
!gmx editconf -f processed.gro -o newbox.gro -c -d 0.5 -bt dodecahedron -princ <group3.txt

#!gmx solvate -cp 1AKI_newbox.gro -cs spc216.gro -o 1AKI_solv.gro -p topol.top
!gmx solvate -cp newbox.gro -cs spc216.gro -o solv.gro -p topol.top

!cp topol.top topol.top.txt

#traj = mdtraj.load('1AKI_solv.gro')
# traj = mdtraj.load('solv.gro')
# view = nglview.show_mdtraj(traj)
# view.clear_representations()
# view.add_representation('point',selection='water',opacity=0.25)
# view

!wget http://www.mdtutorials.com/gmx/lysozyme/Files/ions.mdp

!cp ions.mdp ions.mdp.txt

#!gmx grompp -f ions.mdp -c 1AKI_solv.gro -p topol.top -o ions.tpr
!gmx grompp -f ions.mdp -c solv.gro -p topol.top -o ions.tpr

!cp topol.top topol.top.txt
# !cp topol.top.txt topol.top

# Commented out IPython magic to ensure Python compatibility.
# %%writefile group13.txt
# 13
#

#!gmx genion -s ions.tpr -o 1AKI_solv_ions.gro -p topol.top -pname NA -nname CL -neutral <group13.txt
!gmx genion -s ions.tpr -o solv_ions.gro -p topol.top -pname NA -nname CL -neutral <group13.txt

#traj = mdtraj.load('1AKI_solv_ions.gro')
# traj = mdtraj.load('solv_ions.gro')
# view = nglview.show_mdtraj(traj)
# view.clear_representations()
# view.add_representation('point',selection="water")
# view.add_representation('spacefill',selection="ion")
# view

!wget http://www.mdtutorials.com/gmx/lysozyme/Files/minim.mdp

!cp topol.top topol.top.txt

!cp minim.mdp minim.mdp.txt

#!gmx grompp -f minim.mdp -c 1AKI_solv_ions.gro -p topol.top -o em.tpr
!gmx grompp -f minim.mdp -c solv_ions.gro -p topol.top -o em.tpr

!gmx mdrun -v -deffnm em 1>em.out.txt 2>em.err.txt
#aprox 5s

# Commented out IPython magic to ensure Python compatibility.
# %%writefile edrpotential.txt
# 11 0
#

!gmx energy -f em.edr -o potential.xvg <edrpotential.txt
# type "11 0"

!grace -hardcopy -hdevice SVG -nxy potential.xvg -printfile potential.svg

!cp potential.xvg potential.xvg.txt

from IPython.display import SVG, display
display(SVG("potential.svg"))

!wget http://www.mdtutorials.com/gmx/lysozyme/Files/nvt.mdp

"""
Consider reducing the number of steps (10fold).

Change

nsteps                  = 50000

to

nsteps                  = 5000 ;0"""

!cp nvt.mdp nvt.mdp.txt

!mv nvt.mdp.txt nvt.mdp

!gmx grompp -f nvt.mdp -c em.gro -r em.gro -p topol.top -o nvt.tpr

!gmx mdrun -deffnm nvt 1>nvt.out.txt 2>nvt.err.txt
#aprox 50s

# Commented out IPython magic to ensure Python compatibility.
# %%writefile edrtemperature.txt
# 17 0
#

!gmx energy -f nvt.edr -o temperature.xvg <edrtemperature.txt
#Type "17 0"

!grace -hardcopy -hdevice SVG -nxy temperature.xvg -printfile temperature.svg

display(SVG("temperature.svg"))

!wget http://www.mdtutorials.com/gmx/lysozyme/Files/npt.mdp

!cp npt.mdp npt.mdp.txt

"""Consider reducing the number of steps (10fold).

Change

nsteps                  = 50000

to

nsteps                  = 5000 ;0
"""

!cp npt.mdp.txt npt.mdp

!cat npt.mdp

!gmx grompp -f npt.mdp -c nvt.gro -r nvt.gro -t nvt.cpt -p topol.top -o npt.tpr

!gmx mdrun -deffnm npt 1>npt.out.txt 2>npt.err.txt
#aprox 50s

#!grace --help

# Commented out IPython magic to ensure Python compatibility.
# %%writefile edrpressure.txt
# 19 0
#

!gmx energy -f npt.edr -o pressure.xvg <edrpressure.txt
#Type "19 0"

!cp pressure.xvg pressure.xvg.txt
#!cp pressure.txt pressure.xvg

# Add the following to pressure.xvg
'''
  @ s1 legend "3-ps running average"
  @  RUNAVG (s0, 3)
'''

!grace -hardcopy -hdevice SVG -nxy pressure.xvg -printfile pressure.svg

display(SVG("pressure.svg"))

# Commented out IPython magic to ensure Python compatibility.
# %%writefile edrdensity.txt
# 25 0
#

!gmx energy -f npt.edr -o density.xvg <edrdensity.txt
#  "25 0"

!cp density.xvg density.xvg.txt
#!cp density.txt density.xvg

# Add the following to density.xvg
'''
  @ s1 legend "3-ps running average"
  @  RUNAVG (s0, 3)
'''

!grace -hardcopy -hdevice SVG -nxy density.xvg -printfile density.svg

display(SVG("density.svg"))

!wget http://www.mdtutorials.com/gmx/lysozyme/Files/md.mdp

!cp md.mdp md.mdp.txt
#change
'''
nsteps                  = 5000; 00    ; 2 * 500000 = 1000 ps (1 ns)

nstxout-compressed      = 50; 00      ; save compressed coordinates every 10.0 ps
'''

!cp md.mdp.txt md.mdp

!gmx grompp -f md.mdp -c npt.gro -t npt.cpt -p topol.top -o md_0_1_01of10.tpr

!gmx mdrun -deffnm md_0_1_01of10 1>md_0_1_01of10.out.txt 2>md_0_1_01of10.err.txt
#aprox 5min

#!gmx grompp -f md.mdp -c npt.gro -t npt.cpt -p topol.top -o md_0_1_01of10.tpr
#!gmx mdrun -deffnm md_0_1_01of10
#!cp md_0_1_01* drive/MyDrive/GromacsExample/
#!gmx grompp -f md.mdp -c md_0_1_01of10.gro -t md_0_1_01of10.cpt -p topol.top -o md_0_1_02of10.tpr
#!gmx mdrun -deffnm md_0_1_02of10
#!cp md_0_1_02* drive/MyDrive/GromacsExample/
#!gmx grompp -f md.mdp -c md_0_1_02of10.gro -t md_0_1_02of10.cpt -p topol.top -o md_0_1_03of10.tpr
#!gmx mdrun -deffnm md_0_1_03of10
#!cp md_0_1_03* drive/MyDrive/GromacsExample/
#!gmx grompp -f md.mdp -c md_0_1_03of10.gro -t md_0_1_03of10.cpt -p topol.top -o md_0_1_04of10.tpr
#!gmx mdrun -deffnm md_0_1_04of10
#!cp md_0_1_04* drive/MyDrive/GromacsExample/
#!gmx grompp -f md.mdp -c md_0_1_04of10.gro -t md_0_1_04of10.cpt -p topol.top -o md_0_1_05of10.tpr
#!gmx mdrun -deffnm md_0_1_05of10
#!cp md_0_1_05* drive/MyDrive/GromacsExample/
#!gmx grompp -f md.mdp -c md_0_1_05of10.gro -t md_0_1_05of10.cpt -p topol.top -o md_0_1_06of10.tpr
#!gmx mdrun -deffnm md_0_1_06of10
#!cp md_0_1_06* drive/MyDrive/GromacsExample/
# !gmx grompp -f md.mdp -c md_0_1_06of10.gro -t md_0_1_06of10.cpt -p topol.top -o md_0_1_07of10.tpr
# !gmx mdrun -deffnm md_0_1_07of10
# !cp md_0_1_07* drive/MyDrive/GromacsExample/
# !gmx grompp -f md.mdp -c md_0_1_07of10.gro -t md_0_1_07of10.cpt -p topol.top -o md_0_1_08of10.tpr
# !gmx mdrun -deffnm md_0_1_08of10
# !cp md_0_1_08* drive/MyDrive/GromacsExample/
# !gmx grompp -f md.mdp -c md_0_1_08of10.gro -t md_0_1_08of10.cpt -p topol.top -o md_0_1_09of10.tpr
# !gmx mdrun -deffnm md_0_1_09of10
# !cp md_0_1_09* drive/MyDrive/GromacsExample/
#!gmx grompp -f md.mdp -c md_0_1_09of10.gro -t md_0_1_09of10.cpt -p topol.top -o md_0_1_10of10.tpr
#!gmx mdrun -deffnm md_0_1_10of10
#!cp md_0_1_10* drive/MyDrive/GromacsExample/

#!gmx trjcat -f md_0_1_01of10.xtc md_0_1_02of10.xtc md_0_1_03of10.xtc md_0_1_04of10.xtc md_0_1_05of10.xtc md_0_1_06of10.xtc md_0_1_07of10.xtc md_0_1_08of10.xtc md_0_1_09of10.xtc md_0_1_10of10.xtc -o md_0_1_full.xtc -settime
#!cp md_0_1_full.xtc drive/MyDrive/GromacsExample/

#!gmx eneconv -f md_0_1_01of10.edr md_0_1_02of10.edr md_0_1_03of10.edr md_0_1_04of10.edr md_0_1_05of10.edr md_0_1_06of10.edr md_0_1_07of10.edr md_0_1_08of10.edr md_0_1_09of10.edr md_0_1_10of10.edr -o md_0_1_full.edr -settime
#!cp md_0_1_full.edr drive/MyDrive/GromacsExample/

# Commented out IPython magic to ensure Python compatibility.
# %%writefile trjconv_cw.txt
# 1 0
#

!gmx trjconv -s md_0_1_01of10.tpr -f md_0_1_01of10.gro -o md_0_1_01of10cw.gro -center -pbc whole <trjconv_cw.txt
#1 Protein
#0 System

# Commented out IPython magic to ensure Python compatibility.
# %%writefile trjconv_murc.txt
# 0

!gmx trjconv -s md_0_1_01of10.tpr -f md_0_1_01of10cw.gro -o md_0_1_01of10cwmurc.gro -pbc mol -ur compact <trjconv_murc.txt
#0 System

!gmx trjconv -s md_0_1_01of10.tpr -f md_0_1_01of10.xtc -o md_0_1_01of10cw.xtc -center -pbc whole <trjconv_cw.txt

!gmx trjconv -s md_0_1_01of10.tpr -f md_0_1_01of10cw.xtc -o md_0_1_01of10cwmurc.xtc -pbc mol -ur compact <trjconv_murc.txt

"""Download md_0_1_01of10w.gro and md_0_0_01of10w.xtc

Go to

https://molstar.org/viewer/

Model: md_0_1_01of10w.gro

Coordinates: md_0_1_01of10w.xtc

Apply


"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile prot1.txt
# 1
#

!gmx trjconv -s md_0_1.tpr -f md_0_1.gro -o md_0_1_prot.gro <prot1.txt

!gmx trjconv -s md_0_1.tpr -f md_0_1.xtc -o md_0_1_prot.xtc <prot1.txt

#!cp md_0_1_10of10_prot.gro drive/MyDrive/GromacsExample/

# traj = mdtraj.load_xtc('md_0_1_prot.xtc', top='md_0_1_prot.gro')

# view = nglview.show_mdtraj(traj)
# #view.clear_representations()
# #view.add_representation('ball+stick')
# view

# !cp md_0_1_01* drive/MyDrive/GromacsExample/
#!cp drive/MyDrive/GromacsExample/* .

#!cp md.mdp.10.txt drive/MyDrive/GromacsExample/

# Commented out IPython magic to ensure Python compatibility.
# %%writefile rmsd.txt
# 3 3
#

!gmx rms -s md_0_1_01of10.tpr -f md_0_1_01of10.xtc -o md_0_1_01of10_rmsd.xvg <rmsd.txt

!grace -hardcopy -hdevice SVG -nxy md_0_1_01of10_rmsd.xvg -printfile md_0_1_01of10_rmsd.svg

from IPython.display import SVG, display
display(SVG("md_0_1_01of10_rmsd.svg"))

# Commented out IPython magic to ensure Python compatibility.
# %%writefile gyrate.txt
# 2

!gmx gyrate -s md_0_1_01of10.tpr -f md_0_1_01of10.xt2c -o md_0_1_01of10_gyrate.xvg <gyrate.txt

!grace -hardcopy -hdevice SVG -nxy md_0_1_01of10_gyrate.xvg -printfile md_0_1_01of10_gyrate.svg

from IPython.display import SVG, display
display(SVG("md_0_1_01of10_gyrate.svg"))

# Commented out IPython magic to ensure Python compatibility.
# %%writefile sasa.txt
# 1

!gmx sasa -s md_0_1_01of10.tpr -f md_0_1_01of10.xtc -o md_0_1_01of10_sasa.xvg <sasa.txt

!grace -hardcopy -hdevice SVG -nxy md_0_1_01of10_sasa.xvg -printfile md_0_1_01of10_sasa.svg

from IPython.display import SVG, display
display(SVG("md_0_1_01of10_sasa.svg"))

# Commented out IPython magic to ensure Python compatibility.
# %%writefile rmsf.txt
# 3

!gmx rmsf -s md_0_1_01of10.tpr -f md_0_1_01of10.xtc -o md_0_1_01of10_rmsf.xvg <rmsf.txt

!grace -hardcopy -hdevice SVG -nxy md_0_1_01of10_rmsf.xvg -printfile md_0_1_01of10_rmsf.svg

from IPython.display import SVG, display
display(SVG("md_0_1_01of10_rmsf.svg"))

#!sudo apt-get search pymol

# %%writefile mutate.py

# from pymol import cmd
# cmd.wizard("mutagenesis")
# cmd.fetch("clean.pdb")
# cmd.get_wizard().set_mode("ASP")
# cmd.get_wizard().do_select("chain A and resid 43")
# cmd.get_wizard().apply()
# cmd.save("mutated_structure.pdb")

# !pymol -qcr mutate.py

# !cp mutated_structure.pdb mutated_structure.txt

# import pymol
# pymol.finish_launching(['pymol', '-qc'])

# pymol.cmd.wizard("mutagenesis")